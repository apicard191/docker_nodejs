DOCKER = docker
DOCKER_COMPOSE = docker-compose

##===============================================================
## Setup
##===============================================================

setup: ## Configure the vhost
	./bin/setup
.PHONY: setup

##===============================================================
## Installation & Launch
##===============================================================

build: ## Build the environment
	$(DOCKER_COMPOSE) pull --ignore-pull-failures
	$(DOCKER_COMPOSE) build --pull

start: ## Start the environment
	@if [[ ! -f .env ]]; then \
		echo 'The default configuration has been applied because the ".env" file was not configured.'; \
		cp .env.dist .env; \
	fi
	$(DOCKER_COMPOSE) up -d --remove-orphans
	$(DOCKER_COMPOSE) ps

stop: ## Stop the environment
	$(DOCKER_COMPOSE) stop

restart: ## Restart the environment
restart: stop start

install: ## Install the environment
install: setup build start

reboot: ## Stop build and restart
reboot: stop build start

uninstall: ## Uninstall the environment
	$(DOCKER_COMPOSE) kill
	$(DOCKER_COMPOSE) down --volumes --remove-orphans

.PHONY: build start stop restart install uninstall

##===============================================================
## Connection
##===============================================================

web: ## Open a terminal in the "web" container
	$(DOCKER_COMPOSE) exec web   sh -c "/bin/bash"

mysql: ## Open a terminal in the "mysql" container
	$(DOCKER_COMPOSE) exec mysql sh -c "/bin/bash"

.PHONY: web mysql

##===============================================================
## Others
##===============================================================

logs: ## Follow logs generated by all containers
	$(DOCKER_COMPOSE) logs -f --tail=0

logs-full: ## Follow logs generated by all containers from the containers creation
	$(DOCKER_COMPOSE) logs -f

ps: ## List all containers managed by the environment
	$(DOCKER_COMPOSE) ps

stats: ## Print real-time statistics about containers ressources usage
	docker stats $(docker ps --format={{.Names}})

.PHONY: cache logs logs-full ps stats

# Help
.DEFAULT_GOAL := help
help:
	@grep -E '(^[a-zA-Z_-]+:.*?##.*$$)|(^##)' $(MAKEFILE_LIST) \
		| awk 'BEGIN {FS = ":.*?## "}; {printf "\033[32m%-30s\033[0m %s\n", $$1, $$2}' \
		| sed -e 's/\[32m##/[33m/'
.PHONY: help
